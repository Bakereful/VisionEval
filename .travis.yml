# R for travis: see documentation at https://docs.travis-ci.com/user/languages/r

language: r
sudo: true
dist: trusty
cache: packages
  
# Be strict when checking our package
warnings_are_errors: false

# nloptr R package requires libnlopt-dev to be installed, which requires trusty ubuntu
# phantomjs required for shinytest for VEGUI testing
before_install:
  - sudo apt-get update
  - sudo apt-get -y install libnlopt-dev
  - "export PHANTOMJS_VERSION=2.1.1"
  - "phantomjs --version"
  - "export PATH=$PWD/travis_phantomjs/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/bin:$PATH"
  - "hash -r"
  - "phantomjs --version"
  - "if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then rm -rf $PWD/travis_phantomjs; mkdir -p $PWD/travis_phantomjs; fi"
  - "if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then wget https://github.com/Medium/phantomjs/releases/download/v$PHANTOMJS_VERSION/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -O $PWD/travis_phantomjs/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2; fi"
  - "if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then tar -xvf $PWD/travis_phantomjs/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C $PWD/travis_phantomjs; fi"
  - "if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then hash -r; fi"
  - "phantomjs --version"

install:
  - Rscript -e 'install.packages(c("curl","devtools", "roxygen2", "stringr", "knitr", "data.table", "ordinal", "geosphere", "fields", "car", "pbkrtest", "quantreg", "reshape"))'
  - Rscript -e 'devtools::install_bioc(c("BiocInstaller", "rhdf5"))'
  # Packages required for VEGUI  
  - Rscript -e 'install.packages(c("shiny", "shinyjs", "shinyFiles", "data.table", "DT", "shinyBS", "future", "testit", "jsonlite", "shinyAce", "envDocument", "rhandsontable"))'
  - Rscript -e 'devtools::install_github(c("tdhock/namedCapture", "trestletech/shinyTree", "rstudio/webdriver", "rstudio/shinytest"))'

# setup a different environment variable for each Travis build environment (in the matrix) to run in parallel
env:
   - FOLDER=sources/framework/visioneval         SCRIPT='tests/scripts/test.R'    TYPE=framework   DEPENDS=visioneval
   - FOLDER=sources/modules/VE2001NHTS           SCRIPT='tests/scripts/test.R'    TYPE=module      DEPENDS=visioneval
   - FOLDER=sources/modules/VESimHouseholds      SCRIPT='tests/scripts/test.R'    TYPE=module      DEPENDS=visioneval
   - FOLDER=sources/modules/VELandUse            SCRIPT='tests/scripts/test.R'    TYPE=module      DEPENDS=visioneval
   - FOLDER=sources/modules/VESyntheticFirms     SCRIPT='tests/scripts/test.R'    TYPE=module      DEPENDS=visioneval
   - FOLDER=sources/modules/VETransportSupply    SCRIPT='tests/scripts/test.R'    TYPE=module      DEPENDS=visioneval
   - FOLDER=sources/modules/VECommercialTravel   SCRIPT='tests/scripts/test.R'    TYPE=module      DEPENDS=visioneval
   - FOLDER=sources/modules/VEHouseholdTravel    SCRIPT='tests/scripts/test.R'    TYPE=module      DEPENDS=visioneval
   - FOLDER=sources/modules/VEHouseholdVehicles  SCRIPT='tests/scripts/test.R'    TYPE=module      DEPENDS=visioneval
   - FOLDER=sources/models/VERPAT                SCRIPT='run_model.R'             TYPE=model       DEPENDS=visioneval
   - FOLDER=sources/models/VERSPM/Test1          SCRIPT='run_model.R'             TYPE=model       DEPENDS=visioneval
   - FOLDER=sources/VEGUI                        SCRIPT='run_vegui_test.R'        TYPE=model       DEPENDS=visioneval

# install and test framework, modules, models, GUI
script:
  - |
    if [ $TYPE == "framework" ]; then
      cd $FOLDER
      Rscript -e 'devtools::install_deps(".")'
      Rscript -e 'devtools::check(".")'
      Rscript -e "tryCatch( source( $SCRIPT ) )"
      R CMD INSTALL .
    fi
    if ( [ $TYPE == "module" ] ); then
      #need to install dependent packages
      cd $FOLDER
      Rscript -e 'devtools::install_deps(".")'
      Rscript -e 'devtools::check(".")'
      Rscript -e "tryCatch( source( $SCRIPT ) )"
      R CMD INSTALL .
    fi
    if [ $TYPE == "model" ]; then
      #need to install dependent packages
      cd $FOLDER
      Rscript -e "tryCatch( source( $SCRIPT ) )"
    fi
