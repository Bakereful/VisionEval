% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/units.R
\name{convertUnits}
\alias{convertUnits}
\title{Convert values between units of measure.}
\usage{
convertUnits(Values_, DataType, FromUnits, ToUnits)
}
\arguments{
\item{Values_}{a numeric vector of values to convert from one unit to another.}

\item{DataType}{a string identifying the data type.}

\item{FromUnits}{a string identifying the units of measure of the Values_.}

\item{ToUnits}{a string identifying the units of measure to convert the
Values_ to.}
}
\value{
A numeric vector of values corresponding the the input Values_. If
the DataType is not one of the identified complex types or if the FromUnits
or ToUnits are not recognized, the input vector Values_ is returned. In this
case, the Converted attribute of the returned values is FALSE. If the
DataType is a recognized complex type and the FromUnits and ToUnits are
recognized, the returned values are in the units of the ToUnits. In this case
the Converted attribute of the returned values is TRUE.
}
\description{
\code{convertUnits} converts values between different units of measure for
complex data types recognized by the visioneval code.
}
\details{
The visioneval code recognizes 4 simple data types (integer, double, logical,
and character) and 10 complex data types such as distance, mass, speed, etc.
The simple data types can have any units of measure, but the complex data
types must use units of measure that are declared in the Types() function.
This function contains factors for any two units of measure of a complex data
type. This function converts the values of a complex data type between two
units of measure.
}
